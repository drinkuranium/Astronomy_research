---------------------------------2020. 01. 28----------------------------------

인턴 시작, 김웅태 교수님 및 서우영 박사님과 면담

---------------------------------2020. 01. 29----------------------------------

Gizmo 실행 시도

---------------------------------2020. 01. 30----------------------------------

Gizmo 실행 성공

Gizmo test problem 3번 실시
1. Kelvin-Helmholtz instability simulation
2. Galactic disk with no ISM physics
3. Galactic disk with ISM cooling (only to 10000K)
 - Config.sh에서 Cooling을 키는 경우 TREECOOL 위치를 GIZMO binary가 있는 
   위치로 바꿔주어야 함
 - Cooling physics의 영향 때문인지 timestep이 매우 작음
  -> 시뮬레이션을 끝까지 돌리는 것은 불가능

Gizmo User's Guide 공부 
 - section 9: Snapshot & Initical Condition Files 완독
 - section 10: Log Outputs & Diagnostic Files 완
 - section 7: Config.sh (Setting compile-time options) ~ Hydro Solver Method 까지

---------------------------------2020. 01. 31----------------------------------

GalIC 실행 시도
- 구조와 대부분의 dependency는 Gizmo와 비슷
- Gizmo와 마찬가지로 Makefile에 dependent library의 경로를 지정해주어야 함
- Gizmo와 마찬가지로 Config.sh로 complie time, parameterfile로 runtime 조절
- Gizmo와는 다르게 GMP library 필요 (Makefile에서 확인 가능)
 -> GMU library를 깔기 위해 M4 library 설치
 -> 설치 도중 autoconf, automake library도 같이 설치
- Makefile에서 GMU library의 위치를 따로 잡아주지 않았는데 알아서 인식 - ??

autoconf, automake는 make check, make installcheck에서 오류 발생
-> 몇 천개의 테스트 중 10개 정도의 오류만 났으나, 어떤 영향이 있을지는 미지수
-- 실패한 테스트 메모 --
 autoconf - make check: 2/488 Failed
  501: Libtool (Compatibility with other tools)
  503: autoscan (Autoscan)
 autoconf - make installcheck : All succeeded
 automake - make check: 9/2897 Failed (XFAIL: 38, SKIP: 140)
  t/nobase-python.sh
  t/py-compile-basic.sh
  t/py-compile-basedir.sh
  t/py-compile-destdir.sh
  t/py-compile-option-terminate.sh
  t/python3.sh
  t/python10.sh
  t/python12.sh
  t/subobj.sh
 automake - make checkinstall: 3/2697 Failed (XFAIL: 38, SKIP: 216)
  t/aclocal-print-acdir.sh
  t/location.sh
  t/print-libdir.sh

GalIC 실행 성공 
 - Test with Particle number of Bulge, Halo = 10000, respectively (Model_B1.param)
 - Test with Particle number of Bulge, Halo = 100000, respectively (Model_B1.param)
 - Test with Particle number of Bulge, Disk = 20000, respectively (Model_D1.param)
  -> Failed, running out of memory. It seems like D1 model needs much more memory
  -> Succeeded by reducing sampling particles for density and force fields by factor 10
     (Particle number in target model is not the main cause of exhaustion of memory)
	 (But reducing particle number greatly reduces running time)
	 (Also note that MaxMemSize in parameterfile means maximum RAM allocated 'per core')

Gizmo User's Guide 공부 
 - section 7: Config.sh (Setting compile-time options) 
              Additional Fluid Physics 부터 ~ On-the-Fly Group (Halo, Galaxy, Cluster, etc) Finding 까지
	
------------------------2020. 02. 01 ~ 2020. 02. 02 주말-----------------------

Gizmo User's Guide 공부 
 - section 7: Config.sh (Setting compile-time options) 
              On-the-Fly Group (Halo, Galaxy, Cluster, etc) Finding 살짝 

---------------------------------2020. 02. 03----------------------------------

GalIC GNU optimization option 노트북에 최적화 (by using B1 model)
 - -O3보다 -O2가 오히려 빠르고, -funroll-loops는 큰 차이가 없는 것을 확인
 - Particle number를 늘리면 -funroll-loops는 실행 속도를 더 느리게 만들 것으로 추측
  -> -O2 option만 주는 것이 가장 빠름

GalIC -np로 할당하는 코어 수에 따른 속도 측정 (by using D2 model)
 - 코어 늘어날수록 실행속도도 빨라짐
 - 다만 그 정도는 생각보다 훨씬 작음
  (4->8->12로 4개씩 늘어날 때마다 약 15% 정도 빨라짐)
 - 8->12의 차이와 4->8의 차이가 비슷함 -> Hyper-threading의 영향은 아닌 듯

Gizmo의 결과로 나오는 HDF5 데이터 읽는 코드 해석
(readsnap.py & load_from_snapshot)
 - 전체 구조는 학습했으나, 물리적인 이유는 앞으로 공부가 계속 필요함

GalIC test model의 결과를 load_from_snapshot을 통해 plot
 - 현재는 particle location만 plot했음
 - Velocity ellpisoid plot 등 데이터를 가공하기 위해서는 더 많은 작업이 필요할 듯

---------------------------------2020. 02. 04----------------------------------

GalIC 결과를 이용해 Density contour plot하는 코드 작성

혹시 모를 랩미팅 발표에 대비해 PPT 작성
 - 물론 발표하지는 않음

랩미팅 참가
 - 직접 발표하는 것을 보지는 않고 선배들이 하는 것을 지켜봄
 - 발표자가 한 홛동에 따라서 다룬 내용의 양이 크게 바뀜
 - 실제로 다른 연구자가 쓴 논문을 근거로 발표하므로, 향후 많은 논문 공부는 필수일 듯

데스크탑 GIZMO 초기 세팅 완료
 - Test problem으로 Kelvin-Helmholtz 실행 완료
 - HDF5-1.10.6으로도 GIZMO 실행 가능
  -> -lz 옵션을 지우고 libhdf5.so.103 파일만 /usr/lib로 옮기면 실행됨
  -> libhdf5.so.103 파일만 옮겨야 하는 것은 GIZMO 내부의 오류일 가능성이 큼
  -> 나중에 직접 코드를 뜯어보면서 살펴봐야 할 듯

노트북 GalIC 코드 실행에 따른 발열관리 최적화 
 - Turbo boast를 끄는 것은 최대 클럭이 2600MHz가 되어 성능이 너무 떨어짐
 - 최대 CPU 클럭을 3200MHz로 세팅
 - 다만 코드를 30분 이상 돌리는 경우 다시 발열 관리가 안됨
